'''
Координатные четверти
Дан набор точек на координатной плоскости. Необходимо подсчитать и вывести
количество точек, лежащих в каждой координатной четверти.
В первой строке - количество точек
Каждая следующая строка - два числа (координаты x y), разделенных пробелом
Точки лежащие на оси не относятся к четверти

II  |  I
____|____
III | IV
    |
'''
'''
def check(X, Y):            # определяем в какую четверть попали (индекс answer)
    X = int(X)
    Y = int(Y)
    if X > 0 and Y > 0:     # попали в первую четверть
        return 1         
    elif X < 0 and Y > 0:  # попали во вторую четверть
        return 2
    elif X < 0 and Y < 0:   # попали в третью четверть
        return 3
    elif X > 0 and Y < 0:   # попали в четвертую четверть
        return 4
    else:
        return 0            # попали на ось

answer = [['На оси:', 0],
          ['Первая четверть:', 0],
          ['Вторая четверть:', 0],
          ['Третья четверть:', 0],
          ['Четвертая четверть:', 0]]

gitn = int(input())
for _ in range(n):
    xy = input().split()
    answer[check(xy[0], xy[1])][1] += 1
for i in range(1, 5):
    print(answer[i][0], answer[i][1])
'''


'''
Больше предыдущего
На вход программе подается строка текста из натуральных чисел. Из нее
формируется список чисел. Напишите программу подсчтета количества чисел,
которые больше предшествующего им в этом списке числа, то есть, стоят вслед
за меньшим числом.
На вход подается строка из разделенных пробелами натуральных чисел
'''
'''
numbers = [int(i) for i in input().split()]
count = 0
for i in range(len(numbers) - 1):
    if numbers[i + 1] > numbers[i]:
        count += 1
print(count)
'''



'''
Назад, вперед и наоборот
На вход программе подается строка текста из натуральных чисел.
Из элементов строки формируется список чисел. Напишите программу, которая
меняет местами соседние элементы списка (a[0] с a[1], a[2] с a[3]). Если
в списке нечетное количество элементов, то последний останется на своем месте.
'''
'''
num = [int(i) for i in input().split()]
i = 0
len_num = len(num)
while i <= len_num - 2:
    num[i], num[i+1] = num[i+1], num[i]
    i += 2
print(*num)
'''
'''
num = [i for i in input().split()]
num[0:-1:2], num[1::2] = num[1::2], num[0:-1:2]
print(*num)
'''


'''
Сдвиг в развитии
На вход программе подается строка текста из натуральных чисел. Из элементов
строки формируется список чисел. Напишите программу циклического сдвига
элементов списка вправо, когда последний элемент становится первым, а остальные
сдвигаются на одну позицию вперед, в сторону увеличения индексов.
На вход программе подается строка текста из разделенных пробелами натуральных
чисел.
Сдвига на k = 1
'''
'''
# через срезы
num = [i for i in input().split()]
num[1:], num[0] = num[:-1], num[-1]
print(*num)
'''
'''
# через .pop() и .insert()
num = [i for i in input().split()]
num.insert(0, num.pop())
print(*num)
'''


'''
Различные элементны
На вход программе подается строка текста, содержащая натуральные числа,
расположенные по неубыванию. Из строки формируется список чисел.
Напишите программу для подсчета количества разных элементов в списке.
Вход: числа в строке разделены пробелом
Примечание: задачу можно решить без множеств.
'''
'''
#Через опереции со строкой
def first_num_from_st(stroka):
    answer = ''
    i = 0
    while stroka[i] != ' ':
        answer += stroka[i]
        i += 1
        if i == len(stroka):
            break
    return answer

st = input()
count = 1

while st.find(' ') > 0:
    num = first_num_from_st(st)
    st = st[len(num) + 1:]
    if num != first_num_from_st(st):
        count += 1

print(count)
'''
'''
#Через перевод в список и .pop()
st = [i for i in input().split()]

count = 1
while len(st) > 1:
    num = st[-1]
    st.pop()
    if num != st[-1]:
        count += 1
        
print(count)
'''

#Через список и for
st = input().split()
count = 1
for i in range(len(st) - 1):
    if st[i] != st[i + 1]:
        count += 1
print(count)
