#%% 16.1.15

"""–ü–∏—Å—å–º–æ –¥–ª—è —ç–∫–∑–∞–º–µ–Ω–∞

–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é generate_letter(), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —à–∞–±–ª–æ–Ω–æ–º:

To: <mail>
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, <name>!
–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω —ç–∫–∑–∞–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç <date>, –≤ <time>.
–ü–æ –∞–¥—Ä–µ—Å—É: <place>. 
–≠–∫–∑–∞–º–µ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å <teacher> –≤ –∫–∞–±–∏–Ω–µ—Ç–µ <number>. 
–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ!
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥ –ø—è—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ mail, name, date, time, place –∏ –¥–≤–∞ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö teacher, number –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ teacher —É—á–∏—Ç–µ–ª–µ–º –±—É–¥–µ—Ç –¢–∏–º—É—Ä –ì—É–µ–≤, –∞ –µ—Å–ª–∏ –Ω–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∞ number, —Ç–æ –∫–∞–±–∏–Ω–µ—Ç –±—É–¥–µ—Ç 17.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(generate_letter('lara@yandex.ru', '–õ–∞—Ä–∏—Å–∞', '10 –¥–µ–∫–∞–±—Ä—è', '12:00', '–ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2'))
print()
print(generate_letter('lara@yandex.ru', '–õ–∞—Ä–∏—Å–∞', '10 –¥–µ–∫–∞–±—Ä—è', '12:00', 
                      '–ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2', '–í–∞—Å–∏–ª—å –Ø—Ä–æ—à–µ–≤–∏—á', 23))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

To: lara@yandex.ru
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –õ–∞—Ä–∏—Å–∞!
–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω —ç–∫–∑–∞–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç 10 –¥–µ–∫–∞–±—Ä—è, –≤ 12:00.
–ü–æ –∞–¥—Ä–µ—Å—É: –ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2. 
–≠–∫–∑–∞–º–µ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –¢–∏–º—É—Ä –ì—É–µ–≤ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ 17. 
–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ!

To: lara@yandex.ru
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –õ–∞—Ä–∏—Å–∞!
–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω —ç–∫–∑–∞–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç 10 –¥–µ–∫–∞–±—Ä—è, –≤ 12:00.
–ü–æ –∞–¥—Ä–µ—Å—É: –ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2. 
–≠–∫–∑–∞–º–µ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –í–∞—Å–∏–ª—å –Ø—Ä–æ—à–µ–≤–∏—á –≤ –∫–∞–±–∏–Ω–µ—Ç–µ 23. 
–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ!"""

def generate_letter(mail, 
                    name, 
                    date, 
                    time, 
                    place, 
                    teacher='–¢–∏–º—É—Ä –ì—É–µ–≤', 
                    number=17):
    return f'''To: {mail}
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name}!
–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω —ç–∫–∑–∞–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç {date}, –≤ {time}.
–ü–æ –∞–¥—Ä–µ—Å—É: {place}. 
–≠–∫–∑–∞–º–µ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å {teacher} –≤ –∫–∞–±–∏–Ω–µ—Ç–µ {number}. 
–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ!'''

print(generate_letter('lara@yandex.ru', '–õ–∞—Ä–∏—Å–∞', '10 –¥–µ–∫–∞–±—Ä—è', '12:00', '–ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2'))
print()
print(generate_letter('lara@yandex.ru', '–õ–∞—Ä–∏—Å–∞', '10 –¥–µ–∫–∞–±—Ä—è', '12:00', 
                      '–ß–∞—Å–æ–≤–∞ 23, –∫–æ—Ä–ø—É—Å 2', '–í–∞—Å–∏–ª—å –Ø—Ä–æ—à–µ–≤–∏—á', 23))


#%% 16.1.16 - –ü–µ—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã / —Ç–∞–±–ª–∏—Ü–∞

"""Pretty print

–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é pretty_print(), –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ø–∏—Å–∫–∞ —Å —Ä–∞–º–∫–æ–π. 

–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥ –æ–¥–∏–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç data ‚Äì —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –∏ –¥–≤–∞ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–¥–Ω–æ—Å–∏–º–≤–æ–ª—å–Ω—ã—Ö  –∞—Ä–≥—É–º–µ–Ω—Ç–∞ side –∏ delimiter –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ø–∏—Å–∫–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.

–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç side, —Ç–æ –ø–æ–ª–∞–≥–∞–µ–º side='-', –∞ –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç delimiter, —Ç–æ –ø–æ–ª–∞–≥–∞–µ–º delimiter='|'."""

def pretty_print(data, side='-', delimiter='|'):
    horizon_line = ' ' + side*(2 + 4*(len(data)-1)) + side*(sum(map(lambda x: len(str(x)), data)) - (len(data) - 1))
    print(horizon_line)
    for elem in data:
        print(delimiter, elem, end=' ')
    print(delimiter)
    print(horizon_line)

# pretty_print([10000, 100, 100, '12'])
pretty_print([1, 2, 10, 23, 123, 3000])
pretty_print(['abc', 'def', 'ghi', '12345'])
pretty_print(['abc', 'def', 'ghi'], side='*')
pretty_print(['abc', 'def', 'ghi'], delimiter='#')
pretty_print(['abc', 'def', 'ghi'], side='*', delimiter='#')


#%% 16.1.16 v2 - –ü–µ—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã / —Ç–∞–±–ª–∏—Ü–∞
def pretty_print(data, side='-', delimiter='|'):
    st = f'{delimiter} ' +\
         f' {delimiter} '.join(map(str, data)) +\
         f' {delimiter}'
    horizon_line = f' {side*(len(st) - 2)}'
    print(horizon_line)
    print(st)
    print(horizon_line)

pretty_print([10, 1])
pretty_print([1, 2, 10, 23, 123, 3000])
pretty_print(['abc', 'def', 'ghi', '12345'])
pretty_print(['abc', 'def', 'ghi'], side='*')
pretty_print(['abc', 'def', 'ghi'], delimiter='#')
pretty_print(['abc', 'def', 'ghi'], side='*', delimiter='#')


#%% 16.3.1

"""–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é concat(), –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –æ–±—ä–µ–¥–∏–Ω—è—é—â—É—é –∏—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (sep). –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ –∑–∞–¥–∞–Ω, –∏–º —Å–ª—É–∂–∏—Ç –ø—Ä–æ–±–µ–ª.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è concat() –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–µ —Å–ø–∏—Å–æ–∫, –∞ –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤."""

def concat(*arg, sep=' '):
    answer = ''
    for elem in arg:
        answer += str(elem) + sep
    return answer[:-len(sep)]

print(concat('hello', 'python', 'and', 'stepik'))
print(concat('hello', 'python', 'and', 'stepik', sep='*'))
print(concat('hello', 'python', sep='()()()'))
print(concat('hello', sep='()'))
print(concat(1, 2, 3, 4, 5, 6, 7, 8, 9, sep='$$'))

#%% 16.3.2

"""–ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é product_of_odds() –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π filter() –∏ reduce().

def product_of_odds(data):   # data - —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
    result = 1
    for i in data:
        if i % 2 == 1:
            result *= i
    return result
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –¢–µ—Å—Ç–∏—Ä—É—é—â–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∏–∫–∞–∫ –Ω–µ "–ø–æ–∫–∞—Ä–∞–µ—Ç" –≤–∞—Å –∑–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π filter() –∏ reduce(), –æ–¥–Ω–∞–∫–æ –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —á–µ—Å—Ç–Ω–æ üòÉ."""

from functools import reduce
from operator import mul, mod

def product_of_odds(data):
    return reduce(mul, filter(lambda x: mod(x, 2)==1, data), 1)

d = range(10)

def product_of_odds_orig(data):   # data - —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
    result = 1
    for i in data:
        if i % 2 == 1:
            result *= i
    return result

print('answer', product_of_odds_orig(d))
print('result', product_of_odds(d))


#%% 16.3.3

"""–î–∞–Ω —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ words. –î–æ–ø–∏—à–∏—Ç–µ –∫–æ–¥ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ (*), –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ words, –∞ –∑–∞—Ç–µ–º –ø–µ—á–∞—Ç–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—Å–ø–æ–º–Ω–∏—Ç–µ –ø—Ä–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é map() –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ lambda.
words = 'the world is mine take a look what you have started'.split()

print(*...)"""

words = 'the world is mine take a look what you have started'.split()

print(*map(lambda x: f'"{x}"', words))

# long
print(words)
answer = ''
for w in words:
    answer += f'"{w}" '
print(answer[:-1])


#%% 16.3.4

"""–î–∞–Ω —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª numbers. –î–æ–ø–∏—à–∏—Ç–µ –∫–æ–¥ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ (*), –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª-–ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–≤ –∏ –ø–µ—á–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—Å–ø–æ–º–Ω–∏—Ç–µ –ø—Ä–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é filter() –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ lambda.

numbers = [18, 191, 9009, 5665, 78, 77, 45, 23, 19991, 908, 8976, 6565, 5665, 10, 1000, 908, 909, 232, 45654, 786]
print(*...)"""

numbers = [18, 191, 9009, 5665, 78, 77, 45, 23, 19991, 908, 8976, 6565, 5665, 10, 1000, 908, 909, 232, 45654, 786]
print(*filter(lambda x: str(x)!=str(x)[::-1], numbers))


#%% 16.3.5 

"""–î–∞–Ω —Å–ø–∏—Å–æ–∫ numbers, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –∫–æ—Ä—Ç–µ–∂–µ–π. –î–æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—É—é —á–∞—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ sorted_numbers –±—ã–ª —É–ø–æ—Ä—è–¥–æ—á–µ–Ω –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä—Ç–µ–∂–µ–π —Å–ø–∏—Å–∫–∞ numbers.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—Å–ø–æ–º–Ω–∏—Ç–µ –ø—Ä–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ lambda.
numbers = [(10, -2, 3, 4), (-13, 56), (1, 9, 2), (-1, -9, -45, 32), (-1, 5, 1), (17, 0, 1), (0, 1), (3,), (39, 12), (11, -23), (10, -100, 21, 32), (3, -8), (1, 1)]

sorted_numbers = sorted(numbers, ...)

print(sorted_numbers)"""

numbers = [(10, -2, 3, 4), (-13, 56), (1, 9, 2), (-1, -9, -45, 32), (-1, 5, 1), (17, 0, 1), (0, 1), (3,), (39, 12), (11, -23), (10, -100, 21, 32), (3, -8), (1, 1)]

sorted_numbers = sorted(numbers, key=lambda x: sum(x)/len(x), reverse=True)

print(sorted_numbers)


#%% 16.3.6

"""–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é call(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –Ω–µ—ë –∏ –¥–µ–ª–∞–µ—Ç –≤—ã–∑–æ–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞—è –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ."""
# the answer:
def call(func, *arg):
    return func(*arg)
#--

def mul7(x):
    return x * 7


def add2(x, y):
    return x + y


def add3(x, y, z):
    return x + y + z


print(call(mul7, 10))
print(call(add2, 2, 7))
print(call(add3, 10, 30, 40))
print(call(bool, 0))
print('answer:')
print(70, 9, 80, False, sep='\n')


#%% 16.3.7

"""–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é compose(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–≤–µ –¥—Ä—É–≥–∏—Ö –æ–¥–Ω–æ–∞—Ä–≥—É–º–µ–Ω—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–∏ f –∏ g –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é. –≠—Ç–∞ –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–∞–∫–∂–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç x –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∫ –Ω–µ–º—É –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π f –∏ g –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å, –∫–∞–∫ f(g(x))."""

# result:
def compose(f, g):
    def inner_f(x):
        return f(g(x))
    return inner_f
#--

def add3(x):
    return x + 3


def mul7(x):
    return x * 7

print(compose(mul7, add3)(1))
print(compose(add3, mul7)(2))
print(compose(mul7, str)(3))
print(compose(str, mul7)(5))


#%% 16.3.8

"""–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é arithmetic_operation(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–∏–º–≤–æ–ª –æ–¥–Ω–æ–π –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (+, -, *, /) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–≤—É—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."""

# result:
from operator import add, sub, mul, truediv
from functools import reduce
def arithmetic_operation(symbol):
    operations = {'+':add, '-':sub, '*':mul, '/':truediv}
    def inner_function(a, b):
        return reduce(operations[symbol], [a, b])
    return inner_function
#--

add = arithmetic_operation('+')
div = arithmetic_operation('/')
print(add(10, 20))
print(div(20, 5))


#%% 16.3.9

"""–í –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É

–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏ —Å–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞, –∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–µ—Ç –∏—Ö. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ø–µ—á–∞—Ç—å –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, –≤ –∫–∞–∫–æ–º –ø–µ—Ä–µ–¥–∞–Ω—ã –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –≤—Ö–æ–¥.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏ —Å–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ –ø—Ä–µ–∂–Ω–∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞ üòé.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sorted() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –Ω–æ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤—ã. –õ—é–±–∞—è –±—É–∫–≤–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∏–¥—É—â–µ–π —Ä–∞–Ω—å—à–µ, —á–µ–º –±—É–∫–≤–∞ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ."""

test = {q:'cate Frog cat FROGs bee CATERS mouse cATwalk dolphin mOus Cats CatAlo', a:'bee cat CatAlo cate CATERS Cats cATwalk dolphin Frog FROGs mOus mouse'}
text = test[q]
print('answer:')
print(test[a])
print('result:')

# text = input()
print(*sorted(text.split(), key=lambda x: x.lower()))


#%% 16.3.10

"""–ì–µ–º–∞—Ç—Ä–∏–µ–π —Å–ª–æ–≤–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—É–º–º–∞ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤—Ö–æ–¥—è—â–∏—Ö –≤ –Ω–µ–≥–æ –±—É–∫–≤.

–î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≥–µ–º–∞—Ç—Ä–∏–∏ —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ–π –∑–∞–¥–∞—á–µ:

–ø–µ—Ä–µ–≤–µ–¥—ë–º —Å–ª–æ–≤–æ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä;
—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–∫–≤—ã –≤—ã—á–∏—Å–ª–∏–º –∫–∞–∫ –∫–æ–¥(–±—É–∫–≤—ã) - –∫–æ–¥(–±—É–∫–≤—ã A).
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n, –∞ –∑–∞—Ç–µ–º n —Å—Ç—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ª–æ–≤–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ (–∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ) –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –∏—Ö –≥–µ–º–∞—Ç—Ä–∏–∏. –ï—Å–ª–∏ –≥–µ–º–∞—Ç—Ä–∏—è —Å–ª–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –æ–Ω–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º (–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º) –ø–æ—Ä—è–¥–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n, –∞ –∑–∞—Ç–µ–º n —Å—Ç—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π ord().

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–æ–≤–∞ –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è."""

l = (
    ('basis', 'after', 'chief', 'agenda'),
    ('Basis', 'afTEr', 'CHief', 'agenda')
)
l = l[1]
# l = [input() for _ in range(int(input()))]
g = [sum([ord(letter.upper()) - ord('A') for letter in word]) for word in l]
answer = sorted(zip(g, l))
for elem in answer:
    print(elem[1])



#%% 16.3.11

"""–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ IP-–∞–¥—Ä–µ—Å–æ–≤

IP-–∞–¥—Ä–µ—Å ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Å–µ—Ç–∏, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É TCP/IP.

–í 4-–π –≤–µ—Ä—Å–∏–∏ IP-–∞–¥—Ä–µ—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –ê–¥—Ä–µ—Å –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –≤–∏–¥–µ —á–µ—Ç—ã—Ä—ë—Ö –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª (–æ–∫—Ç–µ—Ç–æ–≤) —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –æ—Ç 0 –¥–æ 255, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö —Ç–æ—á–∫–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, 192.168.1.2.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç IP-–∞–¥—Ä–µ—Å–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ n (n‚â•1) ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ IP-–∞–¥—Ä–µ—Å–æ–≤. –ó–∞—Ç–µ–º n —Å—Ç—Ä–æ–∫ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ IP-–∞–¥—Ä–µ—Å–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ IP-–∞–¥—Ä–µ—Å–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º.

–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ IP-–∞–¥—Ä–µ—Å 192.168.1.2 –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é —Ñ–æ—Ä–º—É:
192*256**3 + 168*256**2 + 1**256**1 + 2*256**0 = 3232235778"""

# st = ['128.199.44.24', '128.199.201.245']
# adresses = ((int(a)*256**3 + int(b)*256**2 + int(c)*256 + int(d), ip) for ip in st for a, b, c, d in ip.split('.'))
# print(*adresses)
#%% 16.3.11 v1
# result:
st = [input() for _ in range(int(input()))]
dec_num = []
for adress in st:
    a, b, c, d = map(int, adress.split('.'))
    dec_num.append(a*256**3 + b*256**2 + c*256 + d)

answer = sorted(zip(dec_num, st))
for elem in answer:
    print(elem[1])
#--

#%% 16.3.11 v2

test = {
    q : ('128.199.44.24', '128.199.201.245', '143.198.168.95', '172.67.181.62', '172.67.222.111', '172.67.10.90', '45.8.106.59', '203.13.32.156', '172.67.181.194'),
    a : ('45.8.106.59', '128.199.44.24', '128.199.201.245', '143.198.168.95', '172.67.10.90', '172.67.181.62', '172.67.181.194', '172.67.222.111', '203.13.32.156')
}
st = test[q]


# st = [input() for _ in range(int(input()))]
answer = sorted(st, key=lambda ip: int(ip.split('.')[0])*256**3 + int(ip.split('.')[1])*256**2 + int(ip.split('.')[2])*256 + int(ip.split('.')[3]))
print(*answer, sep = '\n')


# # –ø—Ä–æ–≤–µ—Ä–∫–∞
# print('answer - result')
# [print(f'{a} - {b}', sep = '\n') for a, b in zip(test[a], answer)]
