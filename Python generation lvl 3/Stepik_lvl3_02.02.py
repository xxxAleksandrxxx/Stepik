#%% 02.02 - Функция hide_card()

"""Реализуйте функцию hide_card(), которая принимает один аргумент:

card_number — строка, представляющая собой корректный номер банковской карты из 16 цифр, между которыми могут присутствовать символы пробела
Функция должна заменять первые 12 цифр в строке card_number на символ * и возвращать полученный результат. Если между цифрами в номере имелись символы пробела, их следует удалить.

Примечание 1. В тестирующую систему сдайте программу, содержащую только необходимую функцию hide_card(), но не код, вызывающий ее."""
# 02.2 v1
def hide_card(card_number):
    card_number = card_number.replace(' ', '')
    return '*'*12 + card_number[12:]

card = '905 678123 45612 56'
print(hide_card(card))

#%% 02.2 v2
def hide_card(card_number):
    return '*'*12 + card_number.replace(' ', '')[-4:]

card = '905 678123 45612 56'
print(hide_card(card))


#%% 02.3 - Функция same_parity()

"""Реализуйте функцию same_parity(), которая принимает один аргумент:

numbers — список целых чисел
Функция должна возвращать новый список, элементами которого являются числа из списка numbers, имеющие ту же четность, что и первый элемент этого списка.

Примечание 1. Числа в возвращаемом функцией списке должны располагаться в своем исходном порядке. 

Примечание 2. В тестирующую систему сдайте программу, содержащую только необходимую функцию same_parity(), но не код, вызывающий ее"""
# 02.3 v1
test = (
    [],
    [6, 0, 67, -7, 10, -20],
    [-7, 0, 67, -9, 70, -29, 90]
)

def same_parity(numbers):
    answer = []
    if numbers:
        answer = list(filter(lambda x: numbers[0]%2 == x%2, numbers))
    return answer

for t in test:
    print(same_parity(t))

#%% 02.3 v2
test = (
    [],
    [6, 0, 67, -7, 10, -20],
    [-7, 0, 67, -9, 70, -29, 90]
)

def same_parity(numbers):
    return [i for i in numbers if i%2==numbers[0]%2]

for t in test:
    print(same_parity(t))


#%% 02.4 - Функция is_valid()

"""Будем считать, что PIN-код является корректным, если он удовлетворяет следующим условиям:

состоит из 4, 5 или 6 символов
состоит только из цифр (0−9)
не содержит пробелов
Реализуйте функцию is_valid(), которая принимает один аргумент:

string — произвольная строка
Функция должна возвращать значение True, если строка string представляет собой корректный PIN-код, или False в противном случае.

Примечание 1. Если в функцию передается пустая строка, функция должна возвращать значение False.

Примечание 2. В тестирующую систему сдайте программу, содержащую только необходимую функцию is_valid(), но не код, вызывающий ее."""
# 02.4 v1
test = (
    '4367',
    '92134',
    '89abc1',
    '49 83'
)
def is_valid(string):
    return all([4 <= len(string) <= 6, ' ' not in string, string.isdigit()])

for t in test:
    print(is_valid(t))